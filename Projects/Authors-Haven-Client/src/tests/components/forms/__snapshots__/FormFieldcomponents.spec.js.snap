// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` LoginModal component rendering Should render properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormField>
    <label
      htmlFor="username"
    >
      Username:
      <input
        id="username"
        name="username"
        onChange={[Function]}
        placeholder="Enter your username"
        required={true}
        type="text"
        value="username"
      />
    </label>
    <Label
      color="red"
      pointing={true}
    >
      Username is invalid
    </Label>
  </FormField>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          htmlFor="username"
        >
          Username:
          <input
            id="username"
            name="username"
            onChange={[Function]}
            placeholder="Enter your username"
            required={true}
            type="text"
            value="username"
          />
        </label>,
        <Label
          color="red"
          pointing={true}
        >
          Username is invalid
        </Label>,
      ],
      "className": "field",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Username:",
            <input
              id="username"
              name="username"
              onChange={[Function]}
              placeholder="Enter your username"
              required={true}
              type="text"
              value="username"
            />,
          ],
          "htmlFor": "username",
        },
        "ref": null,
        "rendered": Array [
          "Username:",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "username",
              "name": "username",
              "onChange": [Function],
              "placeholder": "Enter your username",
              "required": true,
              "type": "text",
              "value": "username",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Username is invalid",
          "color": "red",
          "pointing": true,
        },
        "ref": null,
        "rendered": "Username is invalid",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="username"
          >
            Username:
            <input
              id="username"
              name="username"
              onChange={[Function]}
              placeholder="Enter your username"
              required={true}
              type="text"
              value="username"
            />
          </label>,
          <Label
            color="red"
            pointing={true}
          >
            Username is invalid
          </Label>,
        ],
        "className": "field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Username:",
              <input
                id="username"
                name="username"
                onChange={[Function]}
                placeholder="Enter your username"
                required={true}
                type="text"
                value="username"
              />,
            ],
            "htmlFor": "username",
          },
          "ref": null,
          "rendered": Array [
            "Username:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "username",
                "name": "username",
                "onChange": [Function],
                "placeholder": "Enter your username",
                "required": true,
                "type": "text",
                "value": "username",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Username is invalid",
            "color": "red",
            "pointing": true,
          },
          "ref": null,
          "rendered": "Username is invalid",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
